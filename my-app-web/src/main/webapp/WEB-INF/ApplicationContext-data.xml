<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd          
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc.xsd            
        ">

	<!-- enable declarative transaction management -->
	<tx:annotation-driven />

	<!-- PersistenceAnnotationBeanPostProcessor can be registered automatically 
		to install Entity Manager into instance whose property is annotated with 
		@PersistentContext -->
	<!-- <context:annotation-config /> -->

	<context:property-placeholder location="classpath:/hibernate.properties" />

	<!-- DataSource configuration for Apache Commons DBCP. -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${hibernate.connection.driver_class}"
		p:url="${hibernate.connection.url}" p:username="${hibernate.connection.username}"
		p:password="${hibernate.connection.password}" />

	<!-- JNDI DataSource for JEE environments -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/> -->

	<!-- Database initializer. If any of the script fails, the initialization 
		stops. -->
	<!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
	<!-- <jdbc:initialize-database data-source="dataSource"> <jdbc:script location="${jdbc.initLocation}"/> 
		<jdbc:script location="${jdbc.dataLocation}"/> </jdbc:initialize-database> -->
	<!-- Hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">

		<property name="dataSource">
			<ref bean="dataSource" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>com.myapp.bean.Files</value>
				<value>com.myapp.bean.UserLogin</value>
			</list>
		</property>

	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
</beans>  
